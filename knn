#Running a KNN on classified data 

#import libraries 
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
%matplotlib inline
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import classification_report,confusion_matrix

#get the data 

df = pd.read_csv("datasets/Classified_Data",index_col=0)
df.head()

#apply scaler 
scaler = StandardScaler()
scaler.fit(df.drop('TARGET CLASS',axis=1))

scaled_features = scaler.transform(df.drop('TARGET CLASS',axis=1))
scaled_features

df_feat = pd.DataFrame(scaled_features,columns=df.columns[:-1])
df_feat.head()

#train test split 

X_train, X_test, y_train, y_test = train_test_split(scaled_features,df['TARGET CLASS'],
                                                    test_size=0.30)

#test with k=1
knn = KNeighborsClassifier(n_neighbors=1)
knn.fit(X_train,y_train)
pred = knn.predict(X_test)

#results

print(confusion_matrix(y_test,pred))
print(classification_report(y_test,pred))
